# SonarCloud Analysis - Pull Request
# Runs comprehensive code analysis on pull requests to provide feedback before merge

name: üîç SonarCloud PR Analysis

on:
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  sonarcloud-pr:
    name: üîç SonarCloud PR Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install Dependencies
        run: npm ci --no-audit

      - name: üß™ Run Tests with Coverage
        run: npm run test:coverage:sonar

      - name: üìä Verify Coverage Report
        run: |
          echo "Checking coverage report..."
          ls -la coverage/ || echo "Coverage directory not found"
          if [ -f "coverage/lcov.info" ]; then
            echo "‚úÖ Coverage report found"
            wc -l coverage/lcov.info
            echo "First few lines of coverage report:"
            head -5 coverage/lcov.info
          else
            echo "‚ùå Coverage report not found, checking for alternative locations..."
            find . -name "lcov.info" -type f 2>/dev/null || echo "No lcov.info found anywhere"
            echo "Creating empty coverage report as fallback..."
            mkdir -p coverage
            echo "TN:" > coverage/lcov.info
            echo "end_of_record" >> coverage/lcov.info
          fi

      - name: üîç Run SonarCloud Analysis
        if: ${{ secrets.SONAR_TOKEN }}
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=TheCreditPros_dev_framework_demo
            -Dsonar.organization=thecreditpros
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverageReportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.test.js,**/*.test.ts,**/*.spec.js,**/*.spec.ts,**/node_modules/**,**/dist/**,**/build/**
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.verbose=true

      - name: ‚ö†Ô∏è  SonarCloud Analysis Skipped
        if: ${{ !secrets.SONAR_TOKEN }}
        run: |
          echo "‚ö†Ô∏è  SonarCloud Analysis Skipped"
          echo "   SONAR_TOKEN secret is not configured in repository settings"
          echo "   Even though you have SonarCloud installed globally, GitHub Actions"
          echo "   runs in a containerized environment and needs the token as a secret."
          echo ""
          echo "   To enable SonarCloud analysis:"
          echo "   1. Go to GitHub ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
          echo "   2. Add a new repository secret named 'SONAR_TOKEN'"
          echo "   3. Use the same token from your global SonarCloud installation"
          echo "   4. Re-run this workflow"


      - name: üìä Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-pr-coverage
          path: coverage/
          retention-days: 7
