# DEPRECATED: Functionality moved to sonarcloud-pr-analysis.yml and sonarcloud-analysis.yml
# This workflow is no longer needed as setup logic is integrated into analysis workflows

name: 🔧 SonarCloud Project Setup [DEPRECATED]

on:
  workflow_dispatch: # Manual trigger only (for cleanup/migration)
    inputs:
      force_recreate:
        description: "DEPRECATED - Use sonarcloud-analysis.yml instead"
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: "20"

permissions:
  contents: read
  security-events: write

jobs:
  setup-sonarcloud:
    name: 🔧 Setup SonarCloud Project
    runs-on: ubuntu-latest

    outputs:
      project-key: ${{ steps.setup.outputs.project-key }}
      organization: ${{ steps.setup.outputs.organization }}
      project-name: ${{ steps.setup.outputs.project-name }}
      project-created: ${{ steps.setup.outputs.project-created }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔍 Validate SONAR_TOKEN
        run: |
          if [ -z "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "❌ SONAR_TOKEN secret is not configured"
            echo "Please add SONAR_TOKEN to your GitHub repository or organization secrets"
            echo "Get your token from: https://sonarcloud.io/account/security"
            exit 1
          else
            echo "✅ SONAR_TOKEN is configured"
          fi

      - name: 🚀 Setup SonarCloud Project
        id: setup
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔧 Running SonarCloud project setup..."

          # Make script executable
          chmod +x scripts/sonarcloud-project-manager.js

          # Run the project manager
          node scripts/sonarcloud-project-manager.js --write-properties

          # Extract outputs for other jobs
          if [ -f "sonar-project.properties" ]; then
            # Extract configuration values
            SONAR_PROJECT_KEY=$(grep "^sonar.projectKey=" sonar-project.properties | cut -d'=' -f2)
            SONAR_ORGANIZATION=$(grep "^sonar.organization=" sonar-project.properties | cut -d'=' -f2)
            SONAR_PROJECT_NAME=$(grep "^sonar.projectName=" sonar-project.properties | cut -d'=' -f2)

            echo "project-key=${SONAR_PROJECT_KEY}" >> $GITHUB_OUTPUT
            echo "organization=${SONAR_ORGANIZATION}" >> $GITHUB_OUTPUT
            echo "project-name=${SONAR_PROJECT_NAME}" >> $GITHUB_OUTPUT
            echo "project-created=true" >> $GITHUB_OUTPUT

            echo "✅ SonarCloud project configuration completed"
            echo "📊 Project Key: ${SONAR_PROJECT_KEY}"
            echo "🏢 Organization: ${SONAR_ORGANIZATION}"
            echo "📝 Project Name: ${SONAR_PROJECT_NAME}"
          else
            echo "❌ Failed to generate sonar-project.properties"
            exit 1
          fi

      - name: 📊 Verify SonarCloud Configuration
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "🔍 Verifying SonarCloud project configuration..."

          # Get project key from previous step
          SONAR_PROJECT_KEY="${{ steps.setup.outputs.project-key }}"

          # Test API access to the project
          curl -s -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/projects/search?projects=${SONAR_PROJECT_KEY}" \
            | jq -r '.components[0].key // "NOT_FOUND"' > project_check.txt

          if grep -q "${SONAR_PROJECT_KEY}" project_check.txt; then
            echo "✅ SonarCloud project verified: ${SONAR_PROJECT_KEY}"
          else
            echo "❌ SonarCloud project verification failed"
            cat project_check.txt
            exit 1
          fi

      - name: 📤 Upload Configuration
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
        with:
          name: sonarcloud-config
          path: |
            sonar-project.properties
            project_check.txt
          retention-days: 7

  test-analysis:
    name: 🧪 Test SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: setup-sonarcloud
    if: needs.setup-sonarcloud.outputs.project-created == 'true'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci --no-audit

      - name: 🧪 Run Tests with Coverage
        run: |
          # Use existing test command or fallback
          if npm run test:coverage:sonar 2>/dev/null; then
            echo "✅ Coverage generated with test:coverage:sonar"
          elif npm run test:coverage 2>/dev/null; then
            echo "✅ Coverage generated with test:coverage"
          else
            echo "⚠️ No coverage command found, running basic tests"
            npm test || echo "Tests completed with warnings"
            # Create minimal coverage report
            mkdir -p coverage
            echo "TN:" > coverage/lcov.info
            echo "end_of_record" >> coverage/lcov.info
          fi

      - name: 🔍 Test SonarCloud Analysis
        uses: SonarSource/sonarqube-scan-action@1a6d90ebcb0e6a6b1d87e37ba693fe453195ae25
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ needs.setup-sonarcloud.outputs.organization }}
            -Dsonar.projectKey=${{ needs.setup-sonarcloud.outputs.project-key }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverageReportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.verbose=true

      - name: 🎉 Analysis Complete
        run: |
          echo "🎉 SonarCloud analysis completed successfully!"
          SONAR_PROJECT_KEY="${{ needs.setup-sonarcloud.outputs.project-key }}"
          echo "🔗 View results at: https://sonarcloud.io/project/overview?id=$SONAR_PROJECT_KEY"
