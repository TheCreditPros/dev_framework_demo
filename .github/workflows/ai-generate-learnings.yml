name: ðŸ§  AI Generate Learnings

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL for E2E"
        required: false
        default: "http://localhost:3000"
      web_server:
        description: "Command to start web server"
        required: false
        default: "node scripts/simple-static-server.js"

permissions:
  contents: read

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      ENABLE_E2E: true
      PLAYWRIGHT_BASE_URL: ${{ inputs.base_url }}
      PLAYWRIGHT_WEB_SERVER: ${{ inputs.web_server }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        run: npm ci --no-audit

      - name: Install Playwright (Chromium only)
        run: npx playwright install chromium

      - name: Run E2E (Chromium) to generate artifacts
        run: npm run test:e2e || true

      - name: Run auto-heal demo to export learnings
        run: npm run ai:auto-heal || true

      - name: Upload test-results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: healing-learnings
          path: |
            test-results/
            playwright-report/
          if-no-files-found: warn
          retention-days: 7
