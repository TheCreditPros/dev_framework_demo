name: ðŸ§  AI Generate Learnings

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL for E2E"
        required: false
        default: "http://localhost:3000"
      web_server:
        description: "Command to start web server"
        required: false
        default: "node scripts/simple-static-server.js"

permissions:
  contents: read

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      ENABLE_E2E: true
      PLAYWRIGHT_BASE_URL: ${{ inputs.base_url }}
      PLAYWRIGHT_WEB_SERVER: ${{ inputs.web_server }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: "20"
          cache: npm

      - name: Cache Playwright browsers
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        run: npm ci --no-audit

      - name: Install Playwright (Chromium only)
        run: npx playwright install chromium

      - name: Run E2E (Chromium) to generate artifacts
        run: npm run test:e2e || true

      - name: Run auto-heal demo to export learnings
        run: npm run ai:auto-heal || true

      - name: Upload test-results
        if: always()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
        with:
          name: healing-learnings
          path: |
            test-results/
            playwright-report/
          if-no-files-found: warn
          retention-days: 7
