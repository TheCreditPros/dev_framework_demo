[config]
# Model configuration for Qodo PR Agent - GPT-4o (Company-level API key)
model = "gpt-4o"  # GPT-5 equivalent - most advanced available model
model_turbo = "gpt-4o"  # GPT-5 turbo equivalent
fallback_models = ["gpt-4o-mini", "gpt-4-turbo", "gpt-3.5-turbo"]
# Note: OpenAI API key configured at GitHub organization level
verbosity_level = 1
use_repo_settings_file = true
enable_help_text = true
publish_output = true
publish_output_progress = true

[github]
# GitHub integration settings - OpenAI API key configured at organization level
deployment_type = "user"
ratelimit_retries = 5
base_url = "https://api.github.com"

[pr_reviewer]
# Main PR review configuration
require_focused_review = true
require_score_review = true
require_tests_review = true
require_estimate_effort_to_review = true
require_security_review = true
enable_review_labels_effort = true
enable_review_labels_security = true
maximal_review_effort = 5
enable_auto_review = true
enable_auto_describe = true
enable_auto_improve = false
review_labels = ["enhancement", "bug", "documentation", "security", "performance"]

# Custom review instructions for this framework
extra_instructions = """
CRITICAL REVIEW REQUIREMENTS FOR THIS FRAMEWORK:

ðŸŽ¯ REPOSITORY-WIDE CONTEXT ANALYSIS:
- Analyze the entire repository structure and codebase
- Understand the functions and purpose of existing code
- Review how new changes integrate with existing functionality
- Identify potential conflicts with established patterns
- Consider the overall architecture and design principles

ðŸ”’ BREAKAGE PREVENTION STANDARDS:
- NEVER suggest changes that could break existing functionality
- Ensure backward compatibility is maintained
- Verify API contracts and interfaces remain intact
- Check for potential side effects on other components
- Validate that existing tests continue to pass
- Confirm no breaking changes to public APIs or interfaces

ðŸŽ¯ Code Quality Focus:
- TypeScript best practices and type safety
- React component patterns and hooks usage
- Performance optimizations and memory management
- Code readability and maintainability
- Documentation completeness

ðŸ”’ Security Analysis:
- Input validation and sanitization
- Authentication and authorization patterns
- Data exposure prevention
- Dependency security vulnerabilities
- Secure coding practices

ðŸ“Š Testing & Coverage:
- Unit test adequacy and coverage (80%+ threshold)
- Integration test completeness
- Edge case handling and error scenarios
- Test maintainability

ðŸš€ Performance Review:
- Bundle size optimization
- Runtime performance bottlenecks
- Memory leak prevention
- Loading optimization
- User experience considerations

ðŸ’¡ Developer Experience:
- Clear error messages and logging
- API design consistency
- Configuration flexibility
- Documentation accuracy
- Tooling usability

REPOSITORY CONTEXT UNDERSTANDING:
- Review the entire codebase to understand existing functionality
- Analyze how new changes fit into the overall system architecture
- Identify potential integration points and dependencies
- Understand the established coding patterns and standards
- Consider the impact on existing features and functionality

BREAKAGE PREVENTION PROTOCOLS:
- Prioritize backward compatibility and non-breaking changes
- Identify potential breaking changes and suggest alternatives
- Ensure API contracts and interfaces remain stable
- Verify that existing functionality continues to work
- Check for potential side effects on dependent systems
- Validate that the changes don't introduce regressions

PROVIDE SPECIFIC, ACTIONABLE FEEDBACK:
- Include code examples for improvements
- Reference specific file locations and line numbers
- Explain the reasoning behind recommendations
- Suggest concrete implementation approaches
- Prioritize issues by severity and impact

BE CONSTRUCTIVE AND EDUCATIONAL:
- Explain WHY certain practices are problematic
- Provide context for recommended solutions
- Consider the developer's skill level
- Balance thoroughness with clarity
"""

[pr_description]
# PR description generation settings
enable_auto_describe = true
publish_description_as_comment = false
add_original_user_description = true
keep_original_user_title = true
generate_ai_title = false
custom_template = """
## ðŸ¤– AI Code Review Summary

### Code Quality Score: {SCORE}/10

### Key Findings:
{KEY_FINDINGS}

### Critical Issues:
{CRITICAL_ISSUES}

### Recommendations:
{RECOMMENDATIONS}

### Security Analysis:
{SECURITY_ANALYSIS}

### Testing & Coverage:
{TESTING_SUGGESTIONS}

### Performance Analysis:
{PERFORMANCE_RECOMMENDATIONS}

---
*This review was generated by Qodo AI PR Agent*
"""

[pr_questions]
# Custom questions for repository analysis
additional_questions = [
    "Does this code follow the established architectural patterns?",
    "Are there any performance bottlenecks in data processing?",
    "Is the error handling comprehensive and user-friendly?",
    "Does this maintain backward compatibility?",
    "Are the TypeScript types accurate and complete?",
    "Is the code properly documented for future maintainers?",
    "Are there any security vulnerabilities in the implementation?",
    "Does this follow the project's coding standards?"
]

[pr_update_changelog]
# Changelog update configuration
enable_auto_update = true
changelog_type = "detailed"
include_breaking_changes = true
changelog_filename = "CHANGELOG.md"
changelog_line_format = "- {PR_TITLE} (#{PR_NUMBER})"

[pr_reviewer_tests]
# Test review configuration
require_tests = true
test_coverage_threshold = 80
performance_test_required = false
enable_test_suggestions = true

[pr_improve]
# Code improvement suggestions
enable_auto_improve = false
num_code_suggestions = 3
enable_pr_suggestions = true
suggestion_score_threshold = 7

[pr_ask]
# Question answering configuration
enable_auto_answer = true
max_previous_messages = 10
answer_score_threshold = 6

[pr_code_suggestions]
# Code suggestion configuration
num_code_suggestions = 3
enable_auto_suggestions = false
suggestion_score_threshold = 7
include_explanation = true

[pr_review]
# Review configuration
enable_auto_review = true
review_labels = ["enhancement", "bug", "documentation", "security", "performance"]
max_review_comments = 20
enable_help_text = true

[pr_similarity]
# PR similarity checking
enable_auto_similarity = true
similarity_threshold = 0.8
max_similar_prs = 5

[pr_author]
# PR author analysis
enable_auto_author = false
author_score_threshold = 6

[pr_reflection]
# Self-reflection configuration
enable_self_reflection = true
reflection_score_threshold = 7

[pr_help]
# Help system configuration
enable_auto_help = true
help_score_threshold = 5

[pr_custom]
# Custom commands configuration
enable_custom_commands = true
custom_commands = [
    "analyze_dependencies",
    "check_performance",
    "security_audit",
    "code_quality_scan"
]

[pr_conversation]
# Conversation handling
enable_conversation_mode = true
max_conversation_length = 50
conversation_timeout = 3600

[pr_collaboration]
# Collaboration features
enable_collaboration = true
enable_mention_suggestions = true
enable_review_assignments = false

[pr_analytics]
# Analytics and reporting
enable_analytics = true
analytics_retention_days = 90
enable_pr_metrics = true

[pr_notifications]
# Notification configuration
enable_notifications = true
notify_on_high_priority = true
notify_on_security_issues = true
notify_on_performance_issues = true

[pr_integration]
# External integrations
enable_jira_integration = false
enable_slack_integration = false
enable_teams_integration = false
jira_url = ""
slack_webhook = ""
teams_webhook = ""

[pr_customization]
# UI and branding
custom_emoji = "ðŸ¤–"
custom_prefix = "[AI]"
enable_colored_output = true
enable_markdown_formatting = true

[pr_debug]
# Debug configuration
enable_debug_mode = false
debug_log_level = "INFO"
enable_verbose_logging = false

[pr_limits]
# Rate limiting and quotas
max_prs_per_hour = 10
max_comments_per_pr = 50
max_suggestions_per_pr = 20
rate_limit_retries = 3

[pr_filters]
# Content filtering
enable_content_filtering = true
filter_sensitive_content = true
allowed_languages = ["en", "es", "fr", "de", "zh", "ja", "ko"]
blocked_words = []

[pr_templates]
# Template configuration
enable_custom_templates = true
template_language = "en"
template_format = "markdown"

[pr_metrics]
# Performance metrics
enable_performance_metrics = true
metrics_retention_days = 30
enable_detailed_timings = false
