# AI-SDLC Framework Environment Variables
# Copy this file to .env and configure your specific values

# ===== CORE CONFIGURATION =====
NODE_ENV=development
APP_ENV=local

# ===== GIT CONFIGURATION =====
# Optional: Override default Git configurations
# GIT_USER_NAME="Your Name"
# GIT_USER_EMAIL="your.email@example.com"

# ===== GITHUB INTEGRATION =====
# Required for semantic release and GitHub Actions
GITHUB_TOKEN=your_github_personal_access_token_here

# ===== MS TEAMS INTEGRATION =====
# Required for CI/CD notifications (see docs/ms-teams-integration.md)
MS_TEAMS_WEBHOOK_URI=your_ms_teams_webhook_url_here

# ===== PHASE 2: ADVANCED SECURITY =====
# GitGuardian API Key for advanced secret scanning
GITGUARDIAN_API_KEY=your_gitguardian_api_key_here

# ===== PHASE 2: AI CODE REVIEW =====
# Qodo AI PR Agent Configuration
QODO_AI_API_KEY=your_qodo_ai_api_key_here
QODO_AI_GITHUB_TOKEN=${GITHUB_TOKEN}

# OpenAI API Key for AI-powered features
OPENAI_API_KEY=your_openai_api_key_here

# ===== SONARQUBE INTEGRATION =====
# SonarQube server configuration (Docker: http://localhost:9000)
SONAR_TOKEN=your_sonarqube_token_here
SONAR_HOST_URL=http://localhost:9000

# ===== PERFORMANCE MONITORING =====
# Grafana configuration (Docker: http://localhost:3000)
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your_grafana_api_key_here

# Prometheus configuration (Docker: http://localhost:9090)
PROMETHEUS_URL=http://localhost:9090

# ===== SECURITY TESTING =====
# OWASP ZAP configuration for security testing
ZAP_API_KEY=your_zap_api_key_here
ZAP_HOST=http://localhost:8080

# ===== DATABASE CONFIGURATION =====
# For Laravel applications
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=ai_sdlc_dev
DB_USERNAME=root
DB_PASSWORD=password

# ===== OPTIONAL INTEGRATIONS =====
# PostHog for analytics (if needed)
POSTHOG_PROJECT_API_KEY=your_posthog_api_key_here
POSTHOG_HOST=https://app.posthog.com

# Cursor IDE API Key for AI assistance
CURSOR_API_KEY=your_cursor_api_key_here

# ===== DEVELOPMENT SETTINGS =====
# Enable debug mode for development
DEBUG=true
LOG_LEVEL=debug

# Docker environment settings
DOCKER_COMPOSE_PROJECT_NAME=ai-sdlc