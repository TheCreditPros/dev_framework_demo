version: '3.8'

services:
  # AI-SDLC Development Tools Container
  ai-sdlc-tools:
    build:
      context: .
      dockerfile: docker/ai-sdlc.Dockerfile
    container_name: ai-sdlc-tools
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=development
      - WORKSPACE_DIR=/workspace
    ports:
      - '3001:3001' # AI-SDLC dashboard
    command: ['./ai-sdlc', 'serve']
    networks:
      - ai-sdlc-network

  # Redis for caching validation results and metrics
  redis:
    image: redis:7-alpine
    container_name: ai-sdlc-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - ai-sdlc-network

  # PostgreSQL for storing AI-SDLC metrics and analytics
  postgres:
    image: postgres:15-alpine
    container_name: ai-sdlc-postgres
    environment:
      POSTGRES_DB: ai_sdlc_metrics
      POSTGRES_USER: ai_sdlc
      POSTGRES_PASSWORD: secure_password_here
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ai-sdlc-network

  # SonarQube for advanced code quality analysis
  sonarqube:
    image: sonarqube:community
    container_name: ai-sdlc-sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/ai_sdlc_metrics
      SONAR_JDBC_USERNAME: ai_sdlc
      SONAR_JDBC_PASSWORD: secure_password_here
    ports:
      - '9000:9000'
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-extensions:/opt/sonarqube/extensions
    depends_on:
      - postgres
    networks:
      - ai-sdlc-network

  # GitLab Runner for self-hosted CI/CD enhancement
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: ai-sdlc-runner
    volumes:
      - gitlab-runner-config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ai-sdlc-network

  # Grafana for monitoring and dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: ai-sdlc-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - ai-sdlc-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-sdlc-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - ai-sdlc-network

networks:
  ai-sdlc-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  sonarqube-data:
  sonarqube-logs:
  sonarqube-extensions:
  gitlab-runner-config:
  grafana-data:
  prometheus-data:
