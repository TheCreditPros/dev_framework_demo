[config]
model = "gpt-4o-mini"
model_turbo = "gpt-4o-mini"
fallback_models = ["claude-3-5-sonnet-20241022"]
verbosity_level = 2
use_repo_settings_file = true
enable_help_text = true
publish_output = true
publish_output_progress = true

[github]
user_token = ""
deployment_type = "user"
ratelimit_retries = 5
base_url = "https://api.github.com"

[pr_reviewer]
require_focused_review = true
require_score_review = false
require_tests_review = true
require_estimate_effort_to_review = true
require_security_review = true
enable_review_labels_effort = true
enable_review_labels_security = true
maximal_review_effort = 5

# Custom instructions for this repository
extra_instructions = """
CRITICAL REVIEW REQUIREMENTS FOR THIS FRAMEWORK:

ðŸŽ¯ Code Quality Focus:
- TypeScript best practices and type safety
- React component patterns and hooks usage
- Performance optimizations and memory management
- Code readability and maintainability
- Documentation completeness

ðŸ”’ Security Analysis:
- Input validation and sanitization
- Authentication and authorization patterns
- Data exposure prevention
- Dependency security vulnerabilities
- Secure coding practices

ðŸ“Š Testing & Coverage:
- Unit test adequacy and coverage
- Integration test completeness
- Edge case handling
- Error scenario coverage
- Test maintainability

ðŸš€ Performance Review:
- Bundle size optimization
- Runtime performance bottlenecks
- Memory leak prevention
- Loading optimization
- User experience considerations

ðŸ’¡ Developer Experience:
- Clear error messages and logging
- API design consistency
- Configuration flexibility
- Documentation accuracy
- Tooling usability

PROVIDE SPECIFIC, ACTIONABLE FEEDBACK:
- Include code examples for improvements
- Reference specific file locations and line numbers
- Explain the reasoning behind recommendations
- Suggest concrete implementation approaches
- Prioritize issues by severity and impact

BE CONSTRUCTIVE AND EDUCATIONAL:
- Explain WHY certain practices are problematic
- Provide context for recommended solutions
- Consider the developer's skill level
- Balance thoroughness with clarity
"""

[pr_questions]
# Custom questions for this repository
additional_questions = [
    "Does this code follow the established architectural patterns?",
    "Are there any performance bottlenecks in data processing?",
    "Is the error handling comprehensive and user-friendly?",
    "Does this maintain backward compatibility?",
    "Are the TypeScript types accurate and complete?"
]

[pr_description]
# Custom PR description format
custom_template = """
## ðŸ¤– AI Code Review Summary

### Code Quality Score: {SCORE}/10

### Key Findings:
{KEY_FINDINGS}

### Critical Issues:
{CRITICAL_ISSUES}

### Recommendations:
{RECOMMENDATIONS}

### Security Analysis:
{SECURITY_ANALYSIS}

---
*This review was generated by Qodo AI PR Agent*
"""

[pr_update_changelog]
# Changelog configuration
enable_auto_update = true
changelog_type = "detailed"
include_breaking_changes = true

[pr_reviewer_tests]
# Test review configuration
require_tests = true
test_coverage_threshold = 80
performance_test_required = false
