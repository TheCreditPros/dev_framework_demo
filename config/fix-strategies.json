{
  "increase_timeout": {
    "description": "Increase timeout values in workflow files to prevent premature failures",
    "category": "CONFIGURATION",
    "priority": "HIGH",
    "commands": [
      "find .github/workflows -name '*.yml' -exec sed -i 's/timeout-minutes: [0-9]\\+/timeout-minutes: 30/g' {} \\;",
      "find .github/workflows -name '*.yml' -exec sed -i 's/timeout-minutes: [12][0-9]/timeout-minutes: 30/g' {} \\;",
      "find .github/workflows -name '*.yml' -exec sed -i 's/timeout: [0-9]\\+/timeout: 1800/g' {} \\;"
    ],
    "rollback_commands": ["git checkout .github/workflows/"],
    "validation": "grep -r 'timeout-minutes: 30' .github/workflows/"
  },
  "update_dependencies": {
    "description": "Update project dependencies to resolve compatibility issues",
    "category": "DEPENDENCY",
    "priority": "HIGH",
    "commands": [
      "npm audit fix --audit-level moderate",
      "npm update --save",
      "npm install"
    ],
    "rollback_commands": [
      "npm install --package-lock-only",
      "git checkout package-lock.json"
    ],
    "validation": "npm audit --audit-level moderate"
  },
  "install_dependencies": {
    "description": "Ensure all project dependencies are properly installed",
    "category": "DEPENDENCY",
    "priority": "HIGH",
    "commands": [
      "rm -rf node_modules package-lock.json",
      "npm cache clean --force",
      "npm install --no-optional",
      "npm install"
    ],
    "rollback_commands": ["npm install --package-lock-only"],
    "validation": "npm list --depth=0"
  },
  "lint_fix": {
    "description": "Run automated linting and formatting fixes",
    "category": "CODE_QUALITY",
    "priority": "MEDIUM",
    "commands": [
      "npm run lint:fix 2>/dev/null || echo 'Lint fix completed with warnings'",
      "npm run format:fix 2>/dev/null || echo 'Format fix completed with warnings'",
      "npm run type-check 2>/dev/null || echo 'Type check completed with warnings'"
    ],
    "rollback_commands": ["git checkout ."],
    "validation": "npm run lint"
  },
  "check_syntax": {
    "description": "Validate syntax and configuration files",
    "category": "VALIDATION",
    "priority": "HIGH",
    "commands": [
      "npm run type-check",
      "find .github/workflows -name '*.yml' -exec yamllint {} \\;",
      "find .github/workflows -name '*.yml' -exec grep -l 'on:' {} \\;"
    ],
    "rollback_commands": [],
    "validation": "echo 'Syntax validation completed'"
  },
  "check_permissions": {
    "description": "Verify and fix file permissions and access rights",
    "category": "PERMISSION",
    "priority": "MEDIUM",
    "commands": [
      "chmod +x scripts/*.sh",
      "chmod +x *.sh",
      "find . -name '*.sh' -exec chmod +x {} \\;",
      "find .github/workflows -name '*.yml' -exec chmod 644 {} \\;"
    ],
    "rollback_commands": [],
    "validation": "ls -la scripts/"
  },
  "verify_tokens": {
    "description": "Verify GitHub tokens and authentication setup",
    "category": "AUTHENTICATION",
    "priority": "HIGH",
    "commands": [
      "gh auth status",
      "echo 'GITHUB_TOKEN length: ' ${#GITHUB_TOKEN}",
      "gh api /user --jq '.login'"
    ],
    "rollback_commands": [],
    "validation": "gh auth status"
  },
  "retry_deployment": {
    "description": "Retry the deployment process with backoff",
    "category": "DEPLOYMENT",
    "priority": "MEDIUM",
    "commands": ["sleep 10", "git push --force-with-lease"],
    "rollback_commands": [],
    "validation": "git status"
  },
  "check_connectivity": {
    "description": "Verify network connectivity and service availability",
    "category": "NETWORK",
    "priority": "MEDIUM",
    "commands": [
      "curl -I https://registry.npmjs.org/",
      "curl -I https://api.github.com/",
      "ping -c 3 github.com"
    ],
    "rollback_commands": [],
    "validation": "curl -s https://api.github.com/zen"
  },
  "optimize_resources": {
    "description": "Optimize resource usage and cleanup workspace",
    "category": "RESOURCE",
    "priority": "MEDIUM",
    "commands": [
      "rm -rf node_modules/.cache",
      "npm cache clean --force",
      "docker system prune -f 2>/dev/null || true",
      "find . -name '*.log' -mtime +7 -delete"
    ],
    "rollback_commands": [],
    "validation": "df -h ."
  },
  "fix_build_config": {
    "description": "Fix build configuration and tool settings",
    "category": "BUILD",
    "priority": "HIGH",
    "commands": [
      "npm run build --dry-run 2>/dev/null || echo 'Build config needs review'",
      "find . -name 'webpack.config.js' -exec node -c {} \\;",
      "find . -name 'vite.config.js' -exec node -c {} \\;"
    ],
    "rollback_commands": ["git checkout ."],
    "validation": "npm run build --dry-run"
  },
  "fix_tests": {
    "description": "Fix failing tests and test configuration",
    "category": "TEST",
    "priority": "MEDIUM",
    "commands": [
      "npm run test -- --run --reporter=verbose 2>&1 | head -50",
      "find tests -name '*.test.js' -exec node -c {} \\;",
      "find tests -name '*.spec.js' -exec node -c {} \\;"
    ],
    "rollback_commands": ["git checkout tests/"],
    "validation": "npm run test -- --run --reporter=json | jq '.numFailedTests'"
  },
  "fix_deployment_config": {
    "description": "Fix deployment configuration and settings",
    "category": "DEPLOYMENT",
    "priority": "HIGH",
    "commands": [
      "find .github/workflows -name '*deploy*' -exec grep -l 'deploy' {} \\;",
      "gh secret list",
      "echo 'Checking deployment environment variables...'"
    ],
    "rollback_commands": ["git checkout .github/"],
    "validation": "gh workflow list"
  },
  "audit_security": {
    "description": "Run security audit and apply fixes",
    "category": "SECURITY",
    "priority": "CRITICAL",
    "commands": [
      "npm audit --audit-level high",
      "npm audit fix --audit-level high",
      "gh secret list | grep -i security"
    ],
    "rollback_commands": [
      "npm install --package-lock-only",
      "git checkout package-lock.json"
    ],
    "validation": "npm audit --audit-level high"
  }
}
